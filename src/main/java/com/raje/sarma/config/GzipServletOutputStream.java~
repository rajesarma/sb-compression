package com.dell.ice.ics.config;

import jakarta.servlet.ServletOutputStream;
import jakarta.servlet.WriteListener;

import java.io.IOException;
import java.io.OutputStream;
import java.util.zip.GZIPOutputStream;

public class GzipServletOutputStream extends ServletOutputStream {

  private final GZIPOutputStream gzipOutputStream;

  public GzipServletOutputStream(OutputStream outputStream) throws IOException {
    // Ensure that the GZIPOutputStream wraps the original outputStream
    this.gzipOutputStream = new GZIPOutputStream(outputStream);
  }

  @Override
  public void write(int b) throws IOException {
    gzipOutputStream.write(b);
  }

  @Override
  public void write(byte[] b) throws IOException {
    gzipOutputStream.write(b);
  }

  @Override
  public void write(byte[] b, int off, int len) throws IOException {
    gzipOutputStream.write(b, off, len);
  }

  @Override
  public void close() throws IOException {
    // It's crucial to call finish() on GZIPOutputStream to write the trailing footer.
    // Then close the stream.
    gzipOutputStream.finish();
    gzipOutputStream.close();
  }

  @Override
  public void flush() throws IOException {
    gzipOutputStream.flush();
  }

  @Override
  public boolean isReady() {
    // For synchronous processing, this should generally return true.
    // For asynchronous, you'd integrate with WriteListener.
    return true;
  }

  @Override
  public void setWriteListener(WriteListener writeListener) {
    // Not implemented for synchronous filters. For async servlet, this would be important.
    throw new UnsupportedOperationException("Async operations are not supported by this stream.");
  }
}
